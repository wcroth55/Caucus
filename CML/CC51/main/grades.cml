#
#---grades.cml      Gradebook page.
#
#   Argument usage:
#     (usual)
#
# Copyright (C) 1995-2005 CaucusCare.com.  All rights reserved.
# This program is published under the terms of the CDDL; see
# the file license.txt in the same directory.
#
#: CR 03/18/04 New page.
#: CR  4/13/04 Use $co_priv() for checking %access() priv levels.
#: CR 10/13/04 Make sure SQL is working.
#: CR 01/24/05 Rewrite grades & entries as separate pages.
#------------------------------------------------------------------------

if $empty ($(mainurl))
   include $cml_dir()/startup.i grades.cml
end
 
include $(main)/secure.i member $arg(3)
include $(main)/requiredinfo.i

set nch    $unique()
set cnum   $arg(3)
set cname  %displayed_conf_name ($(cnum))

#---Make sure user has a participation record.
include $(main)/confpartic.i $(cnum)

#------------------------------------------------------------------
set nxt   $page_save (1 grades.cml \
                      $arg(2)+$arg(3)+$arg(4)+$arg(5)+$arg(6)+$arg(7)+$arg(8) \
                      # $(cname) Course&nbsp;Status)

set pagename <span class="pageTitle"><B>$(cname) Course&nbsp;Status&nbsp;List</B></span><BR>

#---Header
include $(main)/head.i $arg(3)  $quote($(cname) Course&nbsp;Status&nbsp;List)
include $(main)/body.i $arg(3) onUnload="pop_close('all','');" \
                               onLoad="setScrolling();"
include $(main)/leftconf.i $arg(3)
include $(main)/header.i  grades </a><a href="#top">Course&nbsp;Status&nbsp;List

#---If we ever call viewitem...
set vi_markseen 1

#---Javascript service functions for gradebook editing.
"<script type="text/javascript" language="javascript">

#---Record gradebook cell changes (and do validity checking on numbers)
"function gradechange (element, key, number) {
"   if (number >= 1  &&  notNum(element.value)) {
"      confirm ("Must be a number.");
"      element.value = "";
"      element.focus();
"      return;
"   }
"   var pad = " " + key + " ";
"   if (document.grades.changelist.value.indexOf(pad) >= 0)  return;
"   document.grades.changelist.value += pad;
"   return;
"}

#---Is a value really a number?
"function notNum (x) {
"   var digits = "0123456789";
"   var dot    = false;
"   for (var i=0;   i<x.length;   ++i) {
"      var c = x.charAt(i);
"      if      (c == "."  &&  dot)      return true;
"      else if (c == ".")               dot =  true;
"      else if (digits.indexOf(c) < 0)  return true;
"   }
"   return false;
"}

"var bl;
"var br;
"var tr;
"function doScrolling() {
"   bl.scrollTop  = br.scrollTop;
"   tr.scrollLeft = br.scrollLeft;
"}
"function setScrolling() {
"   bl = document.getElementById("botLeft");
"   br = document.getElementById("botRight");
"   tr = document.getElementById("topRight");
"   setInterval ("doScrolling()", 200);
"}
"function setHeight (direction) {
"   document.grades.scrollheight.value = 
"      (document.grades.scrollheight.value - 0) + direction * 3;
"   document.grades.submit();
"   return false;
"}
"</script>

#-------------------------------------------------------------

set arglist $(nch)+$(nxt)+$arg(3)+$arg(4)+$arg(5)+$arg(6)+$arg(7)+$arg(8)

set is_instructor $gt_equal (%access($(cnum)) $priv(instructor))

#=========================================================================
#---Section I: Form submission handler.
#   Form cell values are stored as elements named S(key)_(userid),
#   where (key) is the taskkey, and (userid) is the user's userid.
#   The names of the elements that have *changed* are stored
#   as a space-separated list in element 'changelist'.

if $(is_instructor)

   #---Give the cell element name, pluck out the taskkey or the userid:
   eval $mac_define(cellTask \$str_sub(1 \$minus (\$str_index(_ @1) 1)     @1))
   eval $mac_define(cellUID '\$str_sub(  \$plus(1 \$str_index(_ @1)  ) 100 @1)')
   
   #---Convert an input value into a scorenumb (number) or scoretext (text).
   eval $mac_define(scoreNumb \$if (\$equal (x@1 x\$plus (@1 0)) '@1' NULL))
   eval $mac_define(scoreText \$if (\$equal (x@1 x\$plus (@1 0)) NULL '@1'))
   
   if $form(is_submit)
      #---For each element changed, insert/update it into grade_scores table.
      for change in $ifthen ($not ($reloaded()) $form(changelist))
         #---Try INSERT first.
         set query \
            INSERT INTO grade_scores (scorenumb, scoretext, taskkey, userid) \
                 VALUES (%scoreNumb($form($(change))), \
                         %scoreText($form($(change))), \
                         %cellTask($(change)), %cellUID ($(change)))
         set h     $sql_query_open ($(query))
         set count $sql_query_count($(h))
         eval      $sql_query_close($(h))
      
         #---If that failed, try UPDATE.
         if $or ($less ($(h) 0)   $less ($(count) 1))
            set query UPDATE grade_scores \
                         SET scorenumb=%scoreNumb($form($(change))), \
                             scoretext=%scoreText($form($(change)))  \
                       WHERE taskkey=%cellTask($(change)) \
                         AND userid =%cellUID ($(change))
            set h $sql_query_open ($(query))
            eval  $sql_query_close ($(h))
         end
      end
   
      #---Did the scrollheight change?  If so, save and apply it.
      set newheight $word (1 $form(scrollheight) $(scrollheight))
      if $not_equal (x$(scrollheight) x$(newheight))
         set scrollheight  $(newheight)
         eval $set_user_data ($userid() scrollheight $(newheight))
      end
   
      #---Save state of decimal2 flag.
      eval $set_site_data ($(cnum) - decimal2 $form(decimal2))
   end
end
#=========================================================================

"<form name="grades" method="post"  action="grades.cml?$(arglist)+$(arg9)">
"<input type="hidden" name="is_submit" value="1">

#---List of cells changed.
"<input type="hidden" name="changelist" value="">

"<table cellspacing=0 cellpadding=0 border=0 width="100%">
"<tr>
"<td>View the course status by:&nbsp; 
"   <a href="gradesent.cml?$(arglist)">$upper1($(course_task_name))</a>
"   &nbsp;&nbsp;or&nbsp;&nbsp;
"   <u>Class&nbsp;List</u>
"</td>
"<td align=right><a href="$(mainurl)/gradeexport.cml?$(arglist)+$arg(9)"
"   target="_blank">Export to Spreadsheet</a>&nbsp;</td>
"</table>

"<p>
if $(is_instructor)
   "Click in a cell to change its value.&nbsp;
   "Press Tab to skip between cells.&nbsp;<br>

   "<img $(src_clear) height=4><br>
   "<table cellspacing=0 cellpadding=0>
   "<tr><td>Show numbers with 2 decimal places:&nbsp;</td> 
   "<td><input type="checkbox" name="decimal2" value="1"
   "    $ifthen (0$site_data ($(cnum) - decimal2) checked)></td>
   "</table>

   "<img $(src_clear) height=4><br>
   "<table cellspacing=0 cellpadding=0>
   "<tr><td>To save your changes, press Enter or click on:&nbsp;</td>
   "<td><input type="submit" value="Save Changes"></td>
   "</table>
   "<img $(src_clear) height=4><br>
end

#---List the individual student scores (by assignment) in an editable table.

set gradeoverlay $if ($(is_explorer55) gradeoverlay_ie gradeoverlay)
set insize          3
set scrollheight  3.5
if $(is_instructor)
   set scrollheight $word (1 $user_data ($userid() scrollheight) 10)
end
set supports_overflowx $(is_explorer55)
if $(mozilla_version)
   set moz $words (1 2 $replace (. 32 $(mozilla_version)))
   set moz $word(1 $(moz)).$word(2 $(moz))
   set supports_overflowx $gt_equal ($(moz) 1.8)
end
set decimal2 0$site_data ($(cnum) - decimal2)
set mspacer   $if ($(decimal2) MMMMMM MMMMM)
set insize    $if ($(decimal2) 5       3)


#========================================================================
#---Section II: Compute/Display the table column headers

#---Build the uidlist as all members of the conference (if organizer),
#   or else just self (skipping blanks, duplications, or organizers.)
set uidlist $userid()
if $(is_instructor)
   set uidlist $peo_members($(cnum))
   "<input type="hidden" name="scrollheight" value="$(scrollheight)">
end

#---%rowclear (n)
#   %rowflush (n)
#   %rowhtml  (n html-text)
eval $mac_define (rowclear  \$set(row@1))
eval $mac_define (rowflush  \$(row@1)\$set(row@1))
eval $mac_define (rowoutput \$(row@1))
eval $mac_define (rowhtml   \$set (row@1 \$(row@1)\$rest(2 @@)))

#---Build the big table that the scrollable parts fit into.
"<table cellspacing=0 cellpadding=0 border=0 width="100%" bgcolor="white">
"<tr valign=top><td width="10%"
"   ><img $(src_clear) width=1 height=1

    #---Top left: Fixed "Student" part.
"   ><div id="topLeft"
"     style="position: relative;  width: 100%; height: 3em; z-index: 5;"
"   ><div style="position: absolute; left: -1px; top: -5px;"
"   ><table class="gradetable" width="100%"><tbody>
"    <tr class="graderowh" valign="top"><td class="gradetext">Student</td>
"    <tr class="graderowh" valign="top"><td><b>&nbsp;</b></td></table
"   ></div
"   ></div

    #---Bottom left: student list that scrolls up and down with bottom rt div.
"   ><div id="botLeft"
"      style="position: relative;  overflow: hidden; top: -5px; width: 100%; height: $(scrollheight)em;"
                                                                                
"   ><div style="position: absolute;  left: -1px;  top: -3em;"
"   ><table class="gradetable" width="100%" border=0>
"    <tr class="graderowh" valign="top"><td class="gradetext">Student</td>
"    <tr class="graderowh" valign="top"><td><b>&nbsp;</b></td>

   set perfield1
   set perfield2
   set perfield3
   set last __
   set parity 1
   for uid in $(uidlist)
      set access %access($(cnum) $(uid))
      if $and ($not_equal($(last) $(uid))   $not_empty (%per_lname($(uid))) \
               $less    ($(access) $priv(instructor)) \
               $greater ($(access) 0) )
         set parity $minus (1 $(parity))
         "<tr valign="middle" class="graderow$(parity)">
         "<td class="gradetext" \
                 ><nobr><a href="javascript: pop_up('person', '$(uid)');" \
                 >%lName($(uid)),&nbsp;%fName($(uid))</a\
                 >&nbsp;<span class="gradeid">($(uid))</span></nobr></td>

         #---Calculate 3 biggest person fields to provide enough horz space.
         set perfield %lName($(uid)),_%fName($(uid))_($(uid))
         if $greater ($strlen($(perfield)) $strlen($(perfield1)))
            set perfield3 $(perfield2)
            set perfield2 $(perfield1)
            set perfield1 $(perfield)
         end
         elif $greater ($strlen($(perfield)) $strlen($(perfield2)))
            set perfield3 $(perfield2)
            set perfield2 $(perfield)
         end
         elif $greater ($strlen($(perfield)) $strlen($(perfield3)))
            set perfield3 $(perfield)
         end
      end
      set last $(uid)
   end
   "<tr><td>&nbsp;</td>
   "</table>
   "</div></div>

   #---Then also include the 3 biggest person fields, but "hide" them
   #   underneath -- so as to force this whole left side to be wide
   #   enough to always show all the people w/o horz scrolling.
   "<div style="position: relative;  top: -3em;  z-index: -8;"
   "><table class="gradetable" width="100%">
      count pf 1 3
         if $not_empty ($(perfield$(pf)))
            "<tr class="graderow0" valign="center"><td class="gradetext"><nobr
            ">$(perfield$(pf))&nbsp;&nbsp;</nobr></td>
         end
      end
      "</table></div>
"</td>

#---Top Right -- horz scrolling list of gradebook entries.
"<td><img src="clearpix.gif" width=1 height=1
"   ><div id="topRight"
    "style="position: relative;  width: 100%;  height: 3em;  z-index: 5; \
            overflow: hidden; overflow-y: scroll;  overflow-x: hidden;"
"   ><div style="position: absolute; left: -1px; top: -5px;"
"   ><table class="gradetable" width="100%">

   #---Prepare for showing the values for the column headers
   #   (both names and points).
   set pointrow
   set total   0
   set dotprod 0
   
   #---Save arrays of weight(i) and weight(i)/points(i), and the sum of
   #   all the weights (wsum), for later computations.
   set wdivp
   set weights
   set wsum    0
   
   eval %rowclear(0)
   eval %rowhtml (0 <tr valign=top class="graderowh">)
   eval %rowclear(1)
   eval %rowhtml (1 <tr valign=top class="graderowh">)

   set query SELECT title, taskkey, points, weight FROM grade_tasks \
              WHERE cnum=$(cnum) ORDER BY taskkey
   set h $sql_query_open ($(query))

   while $sql_query_row  ($(h))
      set points $plus (0 $(points))
      set weight 0$(weight)
   
      set total $plus ($(total) $(points))
      set dotprod $plus ($(dotprod) $mult($(weight) $(points)))
   
      if $greater ($(points) 0)
         set wdivp $(wdivp) $quotient ($(weight) $(points))
         set wsum  $plus ($(wsum) $(weight))
      end
      else
         set wdivp $(wdivp) 0
      end
      set weights $(weights)   $(weight)

      eval %rowhtml (0 <td class="gradenum" ><nobr>$(title)</nobr></td>$newline())

      if $not ($(decimal2))
         set points $word (1 $replace(. 32 $round ($(points) 0)))
      end
      eval %rowhtml (1 <td class="gradenum"><div class="gradespacer">\
              $(mspacer)<div class="\$(gradeoverlay)">$(points)</div></div>\
              </td>$newline())
   end
   eval $sql_query_close($(h))

   eval %rowhtml (0 <td class="gradenum" colspan=2>Percentage&nbsp;&nbsp;&nbsp;&nbsp;</td>$newline())
   "%rowoutput(0)

   if $and ($(is_instructor)  $not ($(supports_overflowx)))
      "<td class="gradenum">&nbsp;</td>
   end

   eval %rowhtml (1 <td class="gradenum"><div class="gradespacer">\
                    $(mspacer)<div class="$(gradeoverlay)">\
                    &nbsp;So&nbsp;far&nbsp;</div></div></td>)
   eval %rowhtml (1 <td class="gradenum"><div class="gradespacer">\
                    $(mspacer)<div class="$(gradeoverlay)">\
                    &nbsp;All&nbsp;&nbsp;</div></div></td>)
   "%rowoutput(1)

   if $and ($(is_instructor)  $not ($(supports_overflowx)))
      "<td class="gradenum">&nbsp;</td>
   end
   "</table></div></div

#========================================================================
#---Section III: Compute/Display the editable table cells, one row per student.

#---Bottom right
"  ><div id="botRight"
"  style="position: relative;  overflow: scroll;  top: -5px; width: 100%; height: $(scrollheight)em;"
"  ><div style="position: absolute; left: -1px; top: -3em;"
"  ><table class="gradetable" width="100%">
"  %rowflush(0)
"  %rowflush(1)


#---%rowscore (key userid value) is a convenience macro, to make it
#   easier to write the HTML code for each cell.
if $(is_instructor)
   eval $mac_define (rowscore \
         <td class="gradenum"><input type="text" size="$(insize)" name="S@2_@3" value="@4" \
             onChange="gradechange(document.grades['S@2_@3'], 'S@2_@3', 0);" \
             \$mac_expand (\%tab()) \
         ></td>\$newline())
end
else
   eval $mac_define (rowscore <td class="gradenum">@4</td>)
end


#---For each user in the list...
set parity 1
set last __
for uid in $(uidlist)
   set access %access($(cnum) $(uid))
   if $and ($not_equal($(last) $(uid))   $not_empty (%per_lname($(uid))) \
            $less    ($(access) $priv(instructor)) \
            $greater ($(access) 0) )
      set parity $minus (1 $(parity))
      "<tr valign="middle" class="graderow$(parity)">

      set query \
         SELECT t.taskkey, s.userid, s.scorenumb, s.scoretext, t.weight \
           FROM grade_tasks t LEFT JOIN grade_scores s \
             ON (t.taskkey = s.taskkey  AND s.userid='$(uid)')  \
          WHERE t.cnum = $(cnum) \
          ORDER BY t.taskkey

      set dotprod   0
      set total     0
      set i         0
      set pcnt_all  0
      set pcnt_done 0
      set done      0
      set h $sql_query_open ($(query))
      while $sql_query_row  ($(h))
         set total   $plus ($(total) 0$(scorenumb))
         set dotprod $plus ($(dotprod) $mult(0$(scorenumb) 0$(weight)))

         set i        $plus ($(i) 1)
         set temp $mult ($word ($(i) $(wdivp)) 0$(scorenumb))
         set pcnt_all $plus ($(pcnt_all) $(temp))
         if $not_empty ($(scorenumb))
            set pcnt_done $plus ($(pcnt_done) $(temp))
            set done      $plus ($(done) $word ($(i) $(weights)))
         end

         #---Display the editable cell.  If no decimal places,
         #   round to integer and remove decimal point.
         if $and ($not_empty ($(scorenumb))  $not ($(decimal2)))
            set scorenumb $word (1 $replace(. 32 $round ($(scorenumb) 0)))
         end
         "%rowscore (0 $(taskkey) $(uid) $word(1 $(scorenumb) $(scoretext)))
      end

      eval $sql_query_close ($(h))
      set  temp   $round ($mult (100 $quotient ($(pcnt_done) $(done) 4)) 1)\%
      "<td class="gradenum">$(temp)</td>
      set  temp   $round ($mult (100 $quotient ($(pcnt_all)  $(wsum) 4)) 1)\%
      "<td class="gradenum">$(temp)</td>
   end
   set last $(uid)
end
"</table>
"</div></div>

if $(is_instructor)
   "<table cellspacing=0 cellpadding=0 width="100%">
   "<tr><td align=right><a href="#" onClick="return setHeight(-1);"
   "   >Shorter&nbsp;<img $(src_uparrow)></a>&nbsp;</td>
   "<tr><td align=right><a href="#" onClick="return setHeight( 1);"
   "   >Taller&nbsp;<img $(src_dnarrow)></a>&nbsp;</td>
   "</table>
end

"</td>

"</table>

"</form>

include $(main)/errors.i

"</div>
"</body>
"</HTML>

set pagename
#-----------------------------------------------------------------
