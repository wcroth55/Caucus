#
#---myGroupConfs.cml  -- implementation of %myGroupConfs() macro.
#
#  %myGroupConfs (groupType groupName showHeader text...)
#
#  inc(1) nxt Page
#  inc(2) groupType
#  inc(3) groupName
#  inc(4) showHeader (1=yes, 0=no)
#  inc(5) leadin text
#
#  Must be used inside a <TABLE>.
#
#: CR 12/28/06 New macro.
#: CR 01/29/07 Make myGroupQuery... variable unique to each call.
#: CR 07/05/07 Make it work with Caucus 5.1!
#: CR 10/28/08 Use new $priv() function for privilege levels.
#-----------------------------------------------------------------------

  #---For each conf in their list...
#---Get ordered list of confs (cnum's) that are in (groupType groupName).
set myGroupQuery_$inc(2)_$inc(3)  \
    SELECT r.subname, c.name, c.cnum FROM grouprules r, confs c, groups g \
     WHERE r.owner='$inc(2)' AND r.name='$inc(3)' \
       AND r.subowner='CONF' AND r.access >= $priv(minimum) \
       AND r.subname=c.cnum \
       AND c.deleted=0 \
       AND g.owner='CONF' AND g.name=c.cnum \
       AND g.userid='$userid()' AND g.active > 0  AND g.access >= $priv(minimum) \
     ORDER BY c.name

set nch $unique()

"<tr><td colspan=12><b>$inc(5)&nbsp;</b>&nbsp;
   "  <A HREF="readNewFromQuery.cml?$(nch)+$inc(1)+myGroupQuery_$inc(2)_$inc(3)" %help(h_read)
   ">read all new discussion</A></td>
  
if $inc(4)
   "<tr valign=bottom><TD WIDTH=15></TD>
     "<TD ><FONT SIZE=-1>Conference name:</FONT>
         "&nbsp;&nbsp;&nbsp;</TD>
     "<TD WIDTH=15></TD>
     "<TD ALIGN=right><FONT SIZE=-1># of Items with<BR>
     "                New discussion</FONT></TD>
     "<TD WIDTH=45>&nbsp;</TD>
end


#  inc(1) nxt Page
#  inc(2) groupType
#  inc(3) groupName
#  inc(4) showHeader (1=yes, 0=no)
#  inc(5) leadin text

# "<tr><td colspan=8>$(query)</td>

  set ismgr %mgr_in_group ($userid() conferenceChange conferenceAllPrivileges \
                           interfaceManage)
  set h $sql_query_open ($(myGroupQuery_$inc(2)_$inc(3)))
  while $sql_query_row  ($(h))

     #---Skip interface_storage confs, unless appropriate manager or organizer.
     if $or ($equal ($str_index (interface_storage $lower($(name))) 0) \
             $equal (system_announcements          $lower($(name))))
        if $and ($not($(ismgr))  $less ($(access) $priv(instructor)))
           continue
        end
     end

     set dname $replace (_ 32 $(name))
     "<TR>
     "<TD WIDTH=15></TD>

     #---Make sure user's participation record exists.
     include $(main)/confpartic.i $(cnum)
  
     #---Calculate # new items (INEW), # of new responses (RNEW),
     #   and # of items with new responses (WNEW).
#    set inew $plus($it_inew($(cnum)) $it_iunseen($(cnum)))
#    set rnew $it_rnew($(cnum))
#    set wnew $plus($it_wnew($(cnum)) $(inew))

     #---Calculate # new items (inew), # of new responses (rnew),
     #   and # of items with new responses (wnew).
     set q SELECT COUNT(*) wnew, SUM(i.lastresp - s.seen) rnew \
             FROM items i, conf_has_items h, resps_seen s \
            WHERE h.cnum=$(cnum)      AND h.items_id = i.id  \
              AND h.hidden=0          AND h.retired=0 \
              AND h.deleted=0 \
              AND s.items_id = i.id   AND s.userid='$userid()' \
              AND i.lastresp > s.seen AND s.forgot=0
     eval %sql1row ($(q))

     set q SELECT COUNT(*) inew \
             FROM (items i, conf_has_items h) \
             LEFT JOIN resps_seen s  \
                    ON (s.userid='$userid()' AND s.items_id = i.id) \
            WHERE h.cnum=$(cnum) AND h.items_id = i.id AND s.items_id IS NULL \
              AND h.hidden=0     AND h.retired=0  AND h.deleted=0
     eval %sql1row ($(q))
     set wnew $plus ($(wnew) $(inew))

  
     #---Predefine URLs for all new material (ANEW), new items
     #   (IREF), and new responses (RREF).
     set aref
     if $not_equal ($(wnew) 0)
        set aref <A HREF="anew.cml?$(nch)+$inc(1)+\
                          $(cnum)" %help(h_anew)>$(wnew)</A>
     end
     set iref
     if $not_equal ($(inew) 0)
        set iref <A HREF="inew.cml?$(nch)+$inc(1)+\
                          $(cnum)" %help(h_inew)>$(inew)</A>
     end
     set rref
     if $not_equal ($(rnew) 0)
        set rref <A HREF="rnew.cml?$(nch)+$inc(1)+\
                          $(cnum)" %help(h_rnew)>$(rnew)</A>
     end
  
     #---Conf name (and link to home page)
     "<TD><A HREF="confhome.cml?$(nch)+$inc(1)+\
                $(cnum)+x+x+x+x+x" %help(h_cname)>$(dname)</A></TD>
     "<TD></TD>

     #---Links to simple new material.
     "<TD ALIGN=right>$(aref)</TD>
     "<TD></TD>
     set modified  $site_data($(cnum) - modified)
     if $and (0$(dates) 0$(modified))
        "<TD></TD>
        "<TD ALIGN="right"><NOBR><SMALL
        "    >%datetz ($dateof (\
              %epoch_of($site_data($(cnum) - modified))))
        "$(timezonename)</SMALL></NOBR></TD>
     end
  end
  eval $sql_query_close($(h))

"<tr><td colspan=10>$errors()</td>
